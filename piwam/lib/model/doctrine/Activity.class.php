<?php

/**
 * Activity
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 *
 * @package    piwam
 * @subpackage model
 * @author     Adrien Mogenet
 * @version    SVN: $Id: Builder.php 6716 2009-11-12 19:26:28Z jwage $
 */
class Activity extends BaseActivity
{
  protected $_totalExpenses = null;
  protected $_totalIncomes  = null;

  /**
   * Get Activity object as string
   *
   * @return string
   */
  public function __toString()
  {
    return $this->getLabel();
  }

  /**
   * Retrieve list of paid Expense objects
   *
   * @return  array of Expense
   */
  public function getPaidExpenses()
  {
    $q = Doctrine_Query::create()
          ->from('Expense e')
          ->where('e.paid = ?', true)
          ->andWhere('e.activity_id = ?', $this->getId());

    return $q->execute();
  }

  /**
   * Retrieve list of received Incomes
   *
   * @return  array of Income
   */
  public function getReceivedIncomes()
  {
    $q = Doctrine_Query::create()
          ->from('Income i')
          ->where('i.received = ?', true)
          ->andWhere('i.activity_id = ?', $this->getId());

    return $q->execute();
  }

  /**
   * Get total amount of expenses
   *
   * @return integer
   */
  public function getTotalExpenses()
  {
    if (null === $this->_totalExpenses)
    {
      $q = Doctrine_Query::create()
            ->select('SUM(e.amount) AS total')
            ->from('Expense e')
            ->where('e.activity_id = ?', $this->getId())
            ->andWhere('e.paid = ?', true)
            ->groupBy('e.account_id');

      $row = $q->fetchArray();

      if (count($row))
      {
        $this->_totalExpenses = $row[0]['total'];
      }
    }

    return ($this->_totalExpenses === null) ? 0 : $this->_totalExpenses;
  }

  /**
   * Get total amount of incomes
   *
   * @return integer
   */
  public function getTotalIncomes()
  {
    if (null === $this->_totalIncomes)
    {
      $q = Doctrine_Query::create()
            ->select('SUM(i.amount) AS total')
            ->from('Income i')
            ->where('i.activity_id = ?', $this->getId())
            ->andWhere('i.received = ?', true)
            ->groupBy('i.account_id');

      $row = $q->fetchArray();

      if (count($row))
      {
        $this->_totalIncomes = $row[0]['total'];
      }
    }

    return ($this->_totalIncomes === null) ? 0 : $this->_totalIncomes;
  }

  /**
   * Get the total amount of this account
   *
   * @return integer
   */
  public function getTotal()
  {
    $total = $this->getTotalIncomes() - $this->getTotalExpenses();

    return ($total == null) ? 0 : $total;
  }

}