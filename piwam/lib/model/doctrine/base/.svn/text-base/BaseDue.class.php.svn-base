<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Due', 'doctrine');

/**
 * BaseDue
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $account_id
 * @property integer $due_type_id
 * @property integer $member_id
 * @property date $date
 * @property decimal $amount
 * @property integer $created_by
 * @property integer $updated_by
 * @property Account $Account
 * @property DueType $DueType
 * @property Member $Member
 * @property Member $CreatedByMember
 * @property Member $UpdatedByMember
 * 
 * @method integer getId()              Returns the current record's "id" value
 * @method integer getAccountId()       Returns the current record's "account_id" value
 * @method integer getDueTypeId()       Returns the current record's "due_type_id" value
 * @method integer getMemberId()        Returns the current record's "member_id" value
 * @method date    getDate()            Returns the current record's "date" value
 * @method decimal getAmount()          Returns the current record's "amount" value
 * @method integer getCreatedBy()       Returns the current record's "created_by" value
 * @method integer getUpdatedBy()       Returns the current record's "updated_by" value
 * @method Account getAccount()         Returns the current record's "Account" value
 * @method DueType getDueType()         Returns the current record's "DueType" value
 * @method Member  getMember()          Returns the current record's "Member" value
 * @method Member  getCreatedByMember() Returns the current record's "CreatedByMember" value
 * @method Member  getUpdatedByMember() Returns the current record's "UpdatedByMember" value
 * @method Due     setId()              Sets the current record's "id" value
 * @method Due     setAccountId()       Sets the current record's "account_id" value
 * @method Due     setDueTypeId()       Sets the current record's "due_type_id" value
 * @method Due     setMemberId()        Sets the current record's "member_id" value
 * @method Due     setDate()            Sets the current record's "date" value
 * @method Due     setAmount()          Sets the current record's "amount" value
 * @method Due     setCreatedBy()       Sets the current record's "created_by" value
 * @method Due     setUpdatedBy()       Sets the current record's "updated_by" value
 * @method Due     setAccount()         Sets the current record's "Account" value
 * @method Due     setDueType()         Sets the current record's "DueType" value
 * @method Due     setMember()          Sets the current record's "Member" value
 * @method Due     setCreatedByMember() Sets the current record's "CreatedByMember" value
 * @method Due     setUpdatedByMember() Sets the current record's "UpdatedByMember" value
 * 
 * @package    piwam
 * @subpackage model
 * @author     Adrien Mogenet
 * @version    SVN: $Id: Builder.php 7021 2010-01-12 20:39:49Z lsmith $
 */
abstract class BaseDue extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('piwam_due');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => '4',
             ));
        $this->hasColumn('account_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => '4',
             ));
        $this->hasColumn('due_type_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => '4',
             ));
        $this->hasColumn('member_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => '4',
             ));
        $this->hasColumn('date', 'date', 25, array(
             'type' => 'date',
             'notnull' => true,
             'length' => '25',
             ));
        $this->hasColumn('amount', 'decimal', 10, array(
             'type' => 'decimal',
             'notnull' => true,
             'length' => '10',
             'scale' => ' 2',
             ));
        $this->hasColumn('created_by', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('updated_by', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));

        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Account', array(
             'local' => 'account_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('DueType', array(
             'local' => 'due_type_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Member', array(
             'local' => 'member_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Member as CreatedByMember', array(
             'local' => 'created_by',
             'foreign' => 'id',
             'onDelete' => 'SET NULL'));

        $this->hasOne('Member as UpdatedByMember', array(
             'local' => 'updated_by',
             'foreign' => 'id',
             'onDelete' => 'SET NULL'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}