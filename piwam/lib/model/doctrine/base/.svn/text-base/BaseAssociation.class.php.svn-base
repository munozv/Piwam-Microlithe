<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Association', 'doctrine');

/**
 * BaseAssociation
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property string $description
 * @property string $website
 * @property integer $created_by
 * @property integer $updated_by
 * @property Member $CreatedByMember
 * @property Member $UpdatedByMember
 * @property Doctrine_Collection $Activity
 * @property Doctrine_Collection $Accounts
 * @property Doctrine_Collection $ConfigValue
 * @property Doctrine_Collection $Expenses
 * @property Doctrine_Collection $Incomes
 * @property Doctrine_Collection $Status
 * @property Doctrine_Collection $Members
 * @property Doctrine_Collection $DueType
 * @property Doctrine_Collection $MemberExtraRow
 * 
 * @method integer             getId()              Returns the current record's "id" value
 * @method string              getName()            Returns the current record's "name" value
 * @method string              getDescription()     Returns the current record's "description" value
 * @method string              getWebsite()         Returns the current record's "website" value
 * @method integer             getCreatedBy()       Returns the current record's "created_by" value
 * @method integer             getUpdatedBy()       Returns the current record's "updated_by" value
 * @method Member              getCreatedByMember() Returns the current record's "CreatedByMember" value
 * @method Member              getUpdatedByMember() Returns the current record's "UpdatedByMember" value
 * @method Doctrine_Collection getActivity()        Returns the current record's "Activity" collection
 * @method Doctrine_Collection getAccounts()        Returns the current record's "Accounts" collection
 * @method Doctrine_Collection getConfigValue()     Returns the current record's "ConfigValue" collection
 * @method Doctrine_Collection getExpenses()        Returns the current record's "Expenses" collection
 * @method Doctrine_Collection getIncomes()         Returns the current record's "Incomes" collection
 * @method Doctrine_Collection getStatus()          Returns the current record's "Status" collection
 * @method Doctrine_Collection getMembers()         Returns the current record's "Members" collection
 * @method Doctrine_Collection getDueType()         Returns the current record's "DueType" collection
 * @method Doctrine_Collection getMemberExtraRow()  Returns the current record's "MemberExtraRow" collection
 * @method Association         setId()              Sets the current record's "id" value
 * @method Association         setName()            Sets the current record's "name" value
 * @method Association         setDescription()     Sets the current record's "description" value
 * @method Association         setWebsite()         Sets the current record's "website" value
 * @method Association         setCreatedBy()       Sets the current record's "created_by" value
 * @method Association         setUpdatedBy()       Sets the current record's "updated_by" value
 * @method Association         setCreatedByMember() Sets the current record's "CreatedByMember" value
 * @method Association         setUpdatedByMember() Sets the current record's "UpdatedByMember" value
 * @method Association         setActivity()        Sets the current record's "Activity" collection
 * @method Association         setAccounts()        Sets the current record's "Accounts" collection
 * @method Association         setConfigValue()     Sets the current record's "ConfigValue" collection
 * @method Association         setExpenses()        Sets the current record's "Expenses" collection
 * @method Association         setIncomes()         Sets the current record's "Incomes" collection
 * @method Association         setStatus()          Sets the current record's "Status" collection
 * @method Association         setMembers()         Sets the current record's "Members" collection
 * @method Association         setDueType()         Sets the current record's "DueType" collection
 * @method Association         setMemberExtraRow()  Sets the current record's "MemberExtraRow" collection
 * 
 * @package    piwam
 * @subpackage model
 * @author     Adrien Mogenet
 * @version    SVN: $Id: Builder.php 7021 2010-01-12 20:39:49Z lsmith $
 */
abstract class BaseAssociation extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('piwam_association');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => '4',
             ));
        $this->hasColumn('name', 'string', 120, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '120',
             ));
        $this->hasColumn('description', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('website', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('created_by', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('updated_by', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));

        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Member as CreatedByMember', array(
             'local' => 'created_by',
             'foreign' => 'id',
             'onDelete' => 'SET NULL'));

        $this->hasOne('Member as UpdatedByMember', array(
             'local' => 'updated_by',
             'foreign' => 'id',
             'onDelete' => 'SET NULL'));

        $this->hasMany('Activity', array(
             'local' => 'id',
             'foreign' => 'association_id'));

        $this->hasMany('Account as Accounts', array(
             'local' => 'id',
             'foreign' => 'association_id'));

        $this->hasMany('ConfigValue', array(
             'local' => 'id',
             'foreign' => 'association_id'));

        $this->hasMany('Expense as Expenses', array(
             'local' => 'id',
             'foreign' => 'association_id'));

        $this->hasMany('Income as Incomes', array(
             'local' => 'id',
             'foreign' => 'association_id'));

        $this->hasMany('Status', array(
             'local' => 'id',
             'foreign' => 'association_id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('Member as Members', array(
             'local' => 'id',
             'foreign' => 'association_id'));

        $this->hasMany('DueType', array(
             'local' => 'id',
             'foreign' => 'association_id'));

        $this->hasMany('MemberExtraRow', array(
             'local' => 'id',
             'foreign' => 'association_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}