<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('MemberExtraValue', 'doctrine');

/**
 * BaseMemberExtraValue
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $row_id
 * @property integer $member_id
 * @property string $value
 * @property MemberExtraRow $Row
 * @property Member $Member
 * 
 * @method integer          getRowId()     Returns the current record's "row_id" value
 * @method integer          getMemberId()  Returns the current record's "member_id" value
 * @method string           getValue()     Returns the current record's "value" value
 * @method MemberExtraRow   getRow()       Returns the current record's "Row" value
 * @method Member           getMember()    Returns the current record's "Member" value
 * @method MemberExtraValue setRowId()     Sets the current record's "row_id" value
 * @method MemberExtraValue setMemberId()  Sets the current record's "member_id" value
 * @method MemberExtraValue setValue()     Sets the current record's "value" value
 * @method MemberExtraValue setRow()       Sets the current record's "Row" value
 * @method MemberExtraValue setMember()    Sets the current record's "Member" value
 * 
 * @package    piwam
 * @subpackage model
 * @author     Adrien Mogenet
 * @version    SVN: $Id: Builder.php 7021 2010-01-12 20:39:49Z lsmith $
 */
abstract class BaseMemberExtraValue extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('piwam_member_extra_value');
        $this->hasColumn('row_id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'length' => '4',
             ));
        $this->hasColumn('member_id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'length' => '4',
             ));
        $this->hasColumn('value', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '255',
             ));

        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('MemberExtraRow as Row', array(
             'local' => 'row_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Member', array(
             'local' => 'member_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}