<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('MemberExtraRow', 'doctrine');

/**
 * BaseMemberExtraRow
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $association_id
 * @property string $label
 * @property string $description
 * @property string $type
 * @property string $default_value
 * @property string $slug
 * @property string $parameters
 * @property boolean $required
 * @property Association $Association
 * @property Doctrine_Collection $MemberExtraValue
 * 
 * @method integer             getId()               Returns the current record's "id" value
 * @method integer             getAssociationId()    Returns the current record's "association_id" value
 * @method string              getLabel()            Returns the current record's "label" value
 * @method string              getDescription()      Returns the current record's "description" value
 * @method string              getType()             Returns the current record's "type" value
 * @method string              getDefaultValue()     Returns the current record's "default_value" value
 * @method string              getSlug()             Returns the current record's "slug" value
 * @method string              getParameters()       Returns the current record's "parameters" value
 * @method boolean             getRequired()         Returns the current record's "required" value
 * @method Association         getAssociation()      Returns the current record's "Association" value
 * @method Doctrine_Collection getMemberExtraValue() Returns the current record's "MemberExtraValue" collection
 * @method MemberExtraRow      setId()               Sets the current record's "id" value
 * @method MemberExtraRow      setAssociationId()    Sets the current record's "association_id" value
 * @method MemberExtraRow      setLabel()            Sets the current record's "label" value
 * @method MemberExtraRow      setDescription()      Sets the current record's "description" value
 * @method MemberExtraRow      setType()             Sets the current record's "type" value
 * @method MemberExtraRow      setDefaultValue()     Sets the current record's "default_value" value
 * @method MemberExtraRow      setSlug()             Sets the current record's "slug" value
 * @method MemberExtraRow      setParameters()       Sets the current record's "parameters" value
 * @method MemberExtraRow      setRequired()         Sets the current record's "required" value
 * @method MemberExtraRow      setAssociation()      Sets the current record's "Association" value
 * @method MemberExtraRow      setMemberExtraValue() Sets the current record's "MemberExtraValue" collection
 * 
 * @package    piwam
 * @subpackage model
 * @author     Adrien Mogenet
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseMemberExtraRow extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('piwam_member_extra_row');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('association_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('label', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('description', 'string', null, array(
             'type' => 'string',
             'length' => '',
             ));
        $this->hasColumn('type', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('default_value', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('slug', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('parameters', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('required', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));

        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Association', array(
             'local' => 'association_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('MemberExtraValue', array(
             'local' => 'id',
             'foreign' => 'row_id'));
    }
}