<?php

/**
 * BaseKsWCEvent
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property varchar $subject
 * @property string $description
 * @property timestamp $start_time
 * @property timestamp $end_time
 * @property boolean $is_all_day_event
 * @property varchar $color
 * @property varchar $recurring_rule
 * @property string $people
 * @property int $price
 * @property int $nbPlaceLeft
 * @property int $nbTotalPlace
 * @property boolean $activitePayee
 * 
 * @method varchar   getSubject()          Returns the current record's "subject" value
 * @method string    getDescription()      Returns the current record's "description" value
 * @method timestamp getStartTime()        Returns the current record's "start_time" value
 * @method timestamp getEndTime()          Returns the current record's "end_time" value
 * @method boolean   getIsAllDayEvent()    Returns the current record's "is_all_day_event" value
 * @method varchar   getColor()            Returns the current record's "color" value
 * @method varchar   getRecurringRule()    Returns the current record's "recurring_rule" value
 * @method string    getPeople()           Returns the current record's "people" value
 * @method int       getPrice()            Returns the current record's "price" value
 * @method int       getNbPlaceLeft()      Returns the current record's "nbPlaceLeft" value
 * @method int       getNbTotalPlace()     Returns the current record's "nbTotalPlace" value
 * @method boolean   getActivitePayee()    Returns the current record's "activitePayee" value
 * @method KsWCEvent setSubject()          Sets the current record's "subject" value
 * @method KsWCEvent setDescription()      Sets the current record's "description" value
 * @method KsWCEvent setStartTime()        Sets the current record's "start_time" value
 * @method KsWCEvent setEndTime()          Sets the current record's "end_time" value
 * @method KsWCEvent setIsAllDayEvent()    Sets the current record's "is_all_day_event" value
 * @method KsWCEvent setColor()            Sets the current record's "color" value
 * @method KsWCEvent setRecurringRule()    Sets the current record's "recurring_rule" value
 * @method KsWCEvent setPeople()           Sets the current record's "people" value
 * @method KsWCEvent setPrice()            Sets the current record's "price" value
 * @method KsWCEvent setNbPlaceLeft()      Sets the current record's "nbPlaceLeft" value
 * @method KsWCEvent setNbTotalPlace()     Sets the current record's "nbTotalPlace" value
 * @method KsWCEvent setActivitePayee()    Sets the current record's "activitePayee" value
 * 
 * @package    piwam
 * @subpackage model
 * @author     Adrien Mogenet
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseKsWCEvent extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('ks_w_c_event');
        $this->hasColumn('subject', 'varchar', 64, array(
             'type' => 'varchar',
             'notnull' => false,
             'length' => 64,
             ));
        $this->hasColumn('description', 'string', 4000, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 4000,
             ));
        $this->hasColumn('start_time', 'timestamp', null, array(
             'type' => 'timestamp',
             'notnull' => false,
             ));
        $this->hasColumn('end_time', 'timestamp', null, array(
             'type' => 'timestamp',
             'notnull' => false,
             ));
        $this->hasColumn('is_all_day_event', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
        $this->hasColumn('color', 'varchar', 10, array(
             'type' => 'varchar',
             'length' => 10,
             ));
        $this->hasColumn('recurring_rule', 'varchar', 255, array(
             'type' => 'varchar',
             'length' => 255,
             ));
        $this->hasColumn('people', 'string', 4000, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 4000,
             ));
        $this->hasColumn('price', 'int', 4, array(
             'type' => 'int',
             'length' => 4,
             ));
        $this->hasColumn('nbPlaceLeft', 'int', 4, array(
             'type' => 'int',
             'length' => 4,
             ));
        $this->hasColumn('nbTotalPlace', 'int', 4, array(
             'type' => 'int',
             'length' => 4,
             ));
        $this->hasColumn('activitePayee', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}