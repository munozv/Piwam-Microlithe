<?php
/**
 * This file has been autogenerated by Doctrine with command line
 * doctrine:build-model. But file was empty, and we are going to
 * add some operations to perform on the "debt" table in database.
 *
 * Basically, FoobarTable classes are a perfect place to put operations
 * like SELECT operations.  Each operation is implemented in a static
 * function as described below.
 *
 * The operations use the DQL syntax, thanks to Doctrine ORM. For more
 * information about Doctrine, check the official website
 *
 * @see         http://www.doctrine-project.org/
 * @package     pwSandboxPlugin
 * @subpackage  model
 * @author      Adrien Mogenet
 * @since       1.2
 */
class DebtTable extends PluginDebtTable
{
  /**
   * First very basic method.
   *
   * @param   integer   $id : ID of Debt we want to retrieve
   * @return  Debt      A Debt object correspond to id $id
   */
  public static function getById($id)
  {
    $q = Doctrine_Query::create()
          ->from('Debt d')
          ->where('d.id = ?', $id)
          ->limit(1);

    return $q->fetchOne();
  }

  /**
   * Retrieve the list of existing Debt for association $id. This time,
   * query will be a little more complexe because we have to base the
   * query on the field `association_id` in the `member` table.
   *
   * @param   integer       $id
   * @return  array of Debt
   */
  public static function getAllForAssociation($id)
  {
    $q = Doctrine_Query::create()
          ->select('i.amount AS amount, d.created_at')
          ->from('Debt d')
          ->leftJoin('d.Member m')
          ->leftJoin('d.Income i')
          ->where('m.association_id = ?', $id)
          ->orderBy('m.firstname ASC');

    return $q->execute();
  }
}
